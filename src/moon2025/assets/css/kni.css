* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  --scroll-gap: 30px;
    /* 背景色も滑らかに変わるようにtransitionを追加 */
    transition: background-color 1.5s ease-in-out;
    background-color: #222;
    margin: 0;
    padding-top: 10vh;
    background: linear-gradient(
        to bottom,
        #0d0d0d 0%,    /* 上部：黒に近い夜空 */
        #1a237e 40%,   /* 中央やや上：深い青 */
        #3949ab 70%,   /* 中央やや下：青紫 */
        #ec407a 100%   /* 下部：夜明けを思わせるピンク */);
    --scroll-gap: 30px;
}

#main-content-area {
    position: relative; /* z-indexを効かせるため */
    z-index: 1; /* 背景より手前に表示 */
}

h1{
  color: #ffffff;
}

@keyframes infiniteScroll {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(calc(-50% - var(--scroll-gap) / 2));
  }
}


.scroll_wrap {
  margin-block-start: 20vh;
  width: 100%;
  overflow: hidden;
}

.scroll_track {
  width: max-content;
  animation: infiniteScroll 10s linear infinite;

  &:hover {
    animation-play-state: paused;
  }
}

.scroll_inner {
  display: flex;
  flex-wrap: nowrap;
  gap: 0 var(--scroll-gap);
}

/* ふすまのコンテナ */
#fusuma-overlay {
    position: fixed; /* 画面に固定 */
    top: 0;
    left: 0;
    width: 100vw; /* 画面幅いっぱいに */
    height: 100vh; /* 画面高さいっぱいに */
    z-index: 1000; /* 最も手前に表示 */
    display: flex; /* 子要素を横並びにする */
    pointer-events: none; /* アニメーション後に下の要素をクリックできるように */
}

/* 左右のふすま共通のスタイル */
.fusuma {
    width: 50%; /* 画面の半分を覆う */
    height: 100%;
    background-repeat: no-repeat; /* ふすまの基本色 */
    /* ↓お好みの和紙や木目の画像を指定すると、よりリアルになります */
    /* background-image: url('path/to/your/fusuma-image.jpg'); */
    background-size: cover;
    
    /* アニメーションの設定 */
    transition: transform 2.5s ease-in-out;
}

.fusuma-left {
    /* 左側の画像を指定 */
    background-image: url('./../img/fusuma.left.png'); 
    /* 画像の右端を基準に配置（引き手が中央に来るように）*/
    background-position: right;
}

.fusuma-right {
    /* 右側の画像を指定 */
    background-image: url('./../img/fusuma.right.png');
    /* 画像の左端を基準に配置（引き手が中央に来るように）*/
    background-position: left;
}

/* ▼ アニメーション実行用のクラス ▼ */
/* .open が付与されたら、このスタイルが適用される */

/* 左のふすまを開く */
.fusuma-left.open {
    transform: translateX(-100%); /* 左に自身の幅だけ移動 */
}

/* 右のふすまを開く */
.fusuma-right.open {
    transform: translateX(100%); /* 右に自身の幅だけ移動 */
}

.empty-space {
    /* 表示領域の高さ100%に設定 */
    min-height: 60vh; 
}



@keyframes sunFlicker {
    0% {
        /* 開始と終了の状態（通常時） */
        box-shadow: 0 0 1vw 0.5vw rgba(255, 190, 0, 0.9),
                    0 0 3vw 1vw rgba(255, 100, 0, 0.7),
                    0 0 6vw 2vw rgba(255, 0, 0, 0.5);
    }
    50% {
        /* 中間地点の状態（最も大きく、明るくなった時） */
        /* ぼかし・広がり・色の濃さを変更して、より大きな動きに */
        box-shadow: 0 0 1.8vw 0.9vw rgba(255, 200, 0, 1),   /* より明るく、広く */
                    0 0 5vw 1.8vw rgba(255, 110, 0, 0.8), /* より明るく、広く */
                    0 0 10vw 3vw rgba(255, 20, 0, 0.6);   /* より明るく、広く */
    }
    100% {
        /* 通常の状態に戻る */
        box-shadow: 0 0 1vw 0.5vw rgba(255, 190, 0, 0.9),
                    0 0 3vw 1vw rgba(255, 100, 0, 0.7),
                    0 0 6vw 2vw rgba(255, 0, 0, 0.5);
    }
}

/* --- コンテナのスタイル --- */
/* --- キャラ紹介セクション --- */
/* --- キャラ紹介セクション --- */
.character-intro-section {
    padding: 50px 0;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 80vh; /* 画面下部に余白を持たせる */
}

.frame-container {
    position: relative;
    width: 90vw;
    max-width: 900px;
    aspect-ratio: 1 / 1; /* 額縁画像の縦横比に合わせて調整 */
    z-index: 1; /* 背景と月/太陽の中間に配置 */
}

/* --- 色が変わる背景 --- */
.frame-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #1a1a2e;
    transition: background-color 1.5s ease-in-out;
    z-index: 1; /* 一番奥 */
}

/* --- 月と太陽、ボタンを額縁の中央に配置するためのラッパー --- */
.moon-sun-content {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 80%; /* 額縁の内側の幅に合わせて調整 */
    height: 80%; /* 額縁の内側の高さに合わせて調整 */
    display: flex; /* 中央寄せのため */
    justify-content: center;
    align-items: center;
    z-index: 2; /* 背景より手前、額縁画像より奥 */
}

/* --- 既存の月と太陽のコンテナを小さくする --- */
.container {
    position: relative;
    width: min(50vw, 400px); /* ▼▼▼ 月と太陽のサイズを小さく ▼▼▼ */
    height: min(50vw, 400px); /* ▼▼▼ 月と太陽のサイズを小さく ▼▼▼ */
    margin: 0; /* 中央寄せは親要素で行うため不要 */
    z-index: 2; /* frame-backgroundより手前 */
}

/* --- 額縁画像を最前面に表示 --- */
.frame-overlay-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    
    /* ▼▼▼ この部分を全面的に書き換える ▼▼▼ */
    background-image: url('./../img/frame.png'); /* 背景として画像を指定 */
    background-size: 100% 100%; /* コンテナいっぱいに引き伸ばす */
    background-repeat: no-repeat;
    /* ▲▲▲ ここまで ▲▲▲ */
    
    pointer-events: none;
    z-index: 5;
}

/* 太陽の時にこのクラスが付く */
.frame-background.is-day {
    background-color: #a3d5ff; /* 朝の空の色（お好みに調整してください） */
}


/* --- 既存の月と太陽のコンテナを調整 --- */
.container {
    position: relative; /* 背景の上に表示されるように */
    z-index: 2;
    margin: 0 auto; /* 中央揃え（上下の余白は不要に） */
}

/* --- moon-sun-wrapper のスタイル --- */
.moon-sun-wrapper {
    position: relative; width: 100%;
    height: min(37.5vw, 400px);
    border-radius: 50vw 50vw 0 0;
}

/* ▼▼▼ エフェクト部分のコード ▼▼▼ */
.moon, .sun {
    position: absolute; top: 0; left: 0;
    width: 100%; height: 100%;
    border-radius: 50vw 50vw 0 0;
    transition: opacity 1.5s ease-in-out;
}
.moon { 
    background-color: #f0f0f0;
    opacity: 1;
    z-index: 2;
    box-shadow: 0 0 1vw 0.5vw white, /* 内側の強い光 */
                0 0 4vw 2vw rgba(255, 255, 255, 0.5);
}

.sun { 
    background-color: #ffc107;
    opacity: 0;
    z-index: 1;
    animation: sunFlicker 4s infinite ease-in-out;
}

.moon-sun-wrapper.show-sun .moon { opacity: 0; }
.moon-sun-wrapper.show-sun .sun { opacity: 1; }

/* --- ボタンのスタイル --- */
.toggle-button {
    position: absolute;
    top: min(37.5vw, 400px); left: 50%;
    width: min(15vw, 160px); height: min(15vw, 160px);
    transform: translateX(-50%) translateY(-5vw);
    border-radius: 50%; background-color: rgba(255, 255, 255, 0.2);
    border: 2px solid rgba(255, 255, 255, 0.4);
    cursor: pointer; outline: none;
    transition: background-color 0.3s, border-color 0.3s;
    z-index: 10;
}
.toggle-button:hover { 
    background-color: rgba(255, 255, 255, 0.3);
    border-color: rgba(255, 255, 255, 0.6);
}

/* --- シルエットのコンテナ --- */
.silhouettes {
    /* 親要素(.moon-sun-wrapper)を基準に配置 */
    position: absolute;
    bottom: 0; /* 半円の最下部（地平線）に配置 */
    left: 0;
    width: 100%;
    height: 100%;

    /* Flexboxで中の画像を中央・下に揃える */
    display: flex;
    justify-content: center; /* 水平方向の中央揃え */
    align-items: flex-end;   /* 垂直方向の下揃え */
    gap: 2%; /* 影と影の間のすき間 */

    /* 他の要素より手前に表示 */
    z-index: 5;
}

/* --- シルエットの画像共通スタイル --- */
.moon-silhouette,
.sun-silhouette {
    /* 大きさを親要素の高さに合わせて調整 */
    height: 40%; 
    width: auto; /* 高さに合わせて幅は自動調整 */

    /* フェードイン・アウトのアニメーション設定 */
    transition: opacity 1.5s ease-in-out;
}

/* --- 太陽の影の初期状態 --- */
.sun-silhouette {
    /* 太陽の影は最初、非表示（透明）にしておく */
    opacity: 0;
}

/* --- 切り替え時の動き --- */
/* 太陽が表示された時（show-sunクラスが付いた時） */
.moon-sun-wrapper.show-sun .moon-silhouette {
    /* 月の影をフェードアウト */
    opacity: 0;
}

.moon-sun-wrapper.show-sun .sun-silhouette {
    /* 太陽の影をフェードイン */
    opacity: 1;
}

/*------------ここから-------------*/
.divider {
    /* 中の要素を中央に配置するための設定 */
    display: flex;
    align-items: center;
    justify-content: center;

    /* 上下の余白 */
    margin: 1rem 0; /* remは文字サイズ基準の単位 */
}
/* 中央の文字やアイコンのスタイル */
.divider span {
    font-size: 1.2rem;
}

/* style.css に追加 */

.divider-icon {
    height: 2.5em; /* アイコンの高さを、親要素の文字サイズの1.5倍に設定 */
    width: auto;   /* 高さに合わせて幅は自動調整 */
    vertical-align: middle; /* テキストの縦方向の中央に揃える */
}

.section {
    padding: 4rem 1rem;
    max-width: 1000px;
    margin: 0 auto;
    color: #fff;
}
.section-headline {
    font-size: 2rem;
    color: #fedde5;
    text-align: center;
    margin-bottom: -1.3rem;
}

.story { 
    text-align: center;
    font-family: "Shippori Mincho", serif;
}
.story-description {
    margin-top: -1.5rem;
    line-height: 2;   
}

.divider-icon2 {
    height: 1.5em; /* アイコンの高さを、親要素の文字サイズの1.5倍に設定 */
    width: auto;   /* 高さに合わせて幅は自動調整 */
    vertical-align: middle; /* テキストの縦方向の中央に揃える */
}
.divider-icon3 {
    height: 1.7em; /* アイコンの高さを、親要素の文字サイズの1.5倍に設定 */
    width: auto;   /* 高さに合わせて幅は自動調整 */
    vertical-align: middle; /* テキストの縦方向の中央に揃える */
}
/*-------ここまでストーリーの変更----------*/

/*-------ここからコメント----------*/
/* --- コメントセクションのスタイル --- */
h3{
    text-decoration: underline;
}
.comments-section {
    position: relative;
    min-height: 200vh;
    
    overflow: hidden;
    padding: 50px 20px;
}

/* 泡をフワフワさせるアニメーション */
@keyframes floatBubble {
    0% { transform: translateY(0) translateX(0); }
    50% { transform: translateY(-20px) translateX(10px); }
    100% { transform: translateY(0) translateX(0); }
}

/* --- 泡の共通スタイル（動きと配置のみ） --- */
.bubble-large,
.bubble-small {
    position: absolute;
    animation: floatBubble 10s infinite ease-in-out;
    /* 描画を最適化し、ちらつきやぼやけを軽減するおままじない */
    transform: translateZ(0); 
    will-change: transform;
}

/* --- 大きい泡のスタイル --- */
.bubble-large {
    width: 70vw; 
    height: 70vw;
    max-width: 800px;
    max-height: 800px;
    
    border-radius: 50%;
    background: url('./../img/shabon.png') no-repeat center center;
    background-size: cover;
}

/* --- 泡の中のコメント用コンテンツ --- */
/* --- 泡の中のコメント用コンテンツ（修正版） --- */
.comment-content {
    /* 親要素(.bubble-large)の真ん中に強制的に配置 */
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: black;

    /* テキスト領域を泡より小さく設定 */
    width: 50%;
    height: 50%;
    padding: 1em; /* 内側の余白 */
    box-sizing: border-box; /* paddingを含めてサイズを計算 */

    /* テキストを上下左右の中央に揃える */
    display: flex;
    flex-direction: column;
    justify-content: center;
    text-align: center;

    /* 長い文章のはみ出し対策 */
    overflow-y: auto;
    word-break: break-all;
}
/* --- 小さい泡のスタイル --- */
.bubble-small {
    width: 15vw;
    height: 15vw;
    max-width: 180px;
    max-height: 180px;

    /* 不要な効果を強制的にリセット */
    background: none;
    box-shadow: none !important;
    border: none;
    backdrop-filter: none;
}

/* --- 小さい泡の中の画像スタイル --- */
.item-image {
    width: 100%;
    height: auto;
}
/* 大きい泡（コメント）の配置 */
/* 大きい泡（コメント）の配置 (画面内に収めるバージョン) */
.comment-1 { /* 左上の泡 */
    top: 10vh;  /* 画面の上から10%の位置 */
    left: 5vw;  /* 画面の左端から5%の位置 */
    z-index: 10; 
}

.comment-2 { /* 右下の泡 */
    top: 100vh; /* 画面の上から100%（約1画面分下）の位置 */
    right: 5vw; /* 画面の右端から5%の位置 */
    z-index: 11; 
}

/* 小さい泡（アイテム）の配置 */
.item-comic { 
    /* 画像の左下の赤い丸の位置 */
    top: 70%;
    left: 10%;
    z-index: 20;
}
.item-tennis { 
    /* 画像の右の赤い丸の位置 */
    top: 40%;
    right: 5%;
    z-index: 20;
}
.item-icecream { 
    /* 画像の左上の赤い丸の位置 */
    top: 5%;
    left: 5%;
    z-index: 20;
}

/* --- メディアクエリ（スマホ用レイアウト）も更新 --- */
/* 画面の横幅が900px以下の場合に適用されるスタイル */
@media (max-width: 900px) {
    .bubble-large {
        position: relative;
        width: 80vw;
        height: 80vw;
        margin: 10vw auto;
    }

    /* スマホでは小さい泡は非表示にする（任意） */
    .bubble-small {
        display: none;
    }

    /* 個別の位置指定をリセット */
    .comment-1, .comment-2 {
        top: auto;
        left: auto;
        right: auto;
    }
}
/*-------ここまでコメント----------*/
/*-------ここからクレジット----------*/

/*-------ここまでクレジット----------*/
/* クレジット */
.credit-image {
    max-width: 100%;
    display: block;
    margin: 1rem auto;
}

/* フッター */
footer {
    background-color: #111;
    padding: 2rem 1rem;
    text-align: center;
    color: #aaa;
}
.home-link {
    color: #fedde5;
    text-decoration: none;
    font-weight: 500;
}
.home-link:hover { text-decoration: underline; }
